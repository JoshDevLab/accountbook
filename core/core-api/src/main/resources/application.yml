spring.application.name: core-api
spring.profiles.active: local

spring:
  config:
    import:
      - monitoring.yml
      - logging.yml
      - db-core.yml
      - secure.yml
      - client-example.yml
      - aws-client.yml
  mvc.throw-exception-if-no-handler-found: true
  web.resources.add-mappings: false

  servlet:
    multipart:
      enabled: true # 멀티파트 업로드 지원여부 (default: true)
      file-size-threshold: 0B # 파일을 디스크에 저장하지 않고 메모리에 저장하는 최소 크기 (default: 0B)
      location: ${java.io.tmpdir} # 업로드된 파일이 임시로 저장되는 디스크 위치 (default: WAS가 결정)
      max-file-size: 100MB # 한개 파일의 최대 사이즈 (default: 1MB)
      max-request-size: 100MB # 한개 요청의 최대 사이즈 (default: 10MB)


---
spring.config.activate.on-profile: local

spring:
  servlet:
    multipart:
      enabled: true # 멀티파트 업로드 지원여부 (default: true)
      file-size-threshold: 0B # 파일을 디스크에 저장하지 않고 메모리에 저장하는 최소 크기 (default: 0B)
      location: ${java.io.tmpdir} # 업로드된 파일이 임시로 저장되는 디스크 위치 (default: WAS가 결정)
      max-file-size: 100MB # 한개 파일의 최대 사이즈 (default: 1MB)
      max-request-size: 100MB # 한개 요청의 최대 사이즈 (default: 10MB)

---
spring.config.activate.on-profile: local-dev


---
spring.config.activate.on-profile: dev


---
spring.config.activate.on-profile: staging


---
spring.config.activate.on-profile: live


